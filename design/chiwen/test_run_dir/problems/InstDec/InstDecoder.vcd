$version Generated by VerilatedVcd $end
$date Sat Jan 12 14:39:49 2019
 $end
$timescale   1ns $end

 $scope module TOP $end
  $var wire  1 $ clock $end
  $var wire  4 ' io_aluOPCode [3:0] $end
  $var wire 32 & io_inst [31:0] $end
  $var wire  1 ) io_regInfos_0_need $end
  $var wire  5 ( io_regInfos_0_regIdx [4:0] $end
  $var wire  1 + io_regInfos_1_need $end
  $var wire  5 * io_regInfos_1_regIdx [4:0] $end
  $var wire  1 - io_regInfos_2_need $end
  $var wire  5 , io_regInfos_2_regIdx [4:0] $end
  $var wire  1 / io_regInfos_3_need $end
  $var wire  5 . io_regInfos_3_regIdx [4:0] $end
  $var wire  1 % reset $end
  $scope module InstDecoder $end
   $var wire  1 1 alu_op_encoder_io_in_1 $end
   $var wire  1 : alu_op_encoder_io_in_10 $end
   $var wire  1 ; alu_op_encoder_io_in_11 $end
   $var wire  1 < alu_op_encoder_io_in_12 $end
   $var wire  1 = alu_op_encoder_io_in_13 $end
   $var wire  1 > alu_op_encoder_io_in_14 $end
   $var wire  1 2 alu_op_encoder_io_in_2 $end
   $var wire  1 3 alu_op_encoder_io_in_3 $end
   $var wire  1 4 alu_op_encoder_io_in_4 $end
   $var wire  1 5 alu_op_encoder_io_in_5 $end
   $var wire  1 6 alu_op_encoder_io_in_6 $end
   $var wire  1 7 alu_op_encoder_io_in_7 $end
   $var wire  1 8 alu_op_encoder_io_in_8 $end
   $var wire  1 9 alu_op_encoder_io_in_9 $end
   $var wire  4 ? alu_op_encoder_io_out [3:0] $end
   $var wire  1 $ clock $end
   $var wire  3 0 decoder_3_8_io_in [2:0] $end
   $var wire  8 # decoder_3_8_io_out [7:0] $end
   $var wire  1 B func6_op_0 $end
   $var wire  1 C func6_op_10000 $end
   $var wire  1 @ func7_op_0 $end
   $var wire  1 A func7_op_100000 $end
   $var wire  1 X inst_ADDIW $end
   $var wire  1 \ inst_ADDW $end
   $var wire  1 W inst_AND $end
   $var wire  1 L inst_ANDI $end
   $var wire  1 D inst_I $end
   $var wire  1 F inst_IW $end
   $var wire  1 V inst_OR $end
   $var wire  1 K inst_ORI $end
   $var wire  1 E inst_R $end
   $var wire  1 G inst_RW $end
   $var wire  1 P inst_SLL $end
   $var wire  1 M inst_SLLI $end
   $var wire  1 Y inst_SLLIW $end
   $var wire  1 ] inst_SLLW $end
   $var wire  1 Q inst_SLT $end
   $var wire  1 H inst_SLTI $end
   $var wire  1 I inst_SLTIU $end
   $var wire  1 R inst_SLTU $end
   $var wire  1 U inst_SRA $end
   $var wire  1 O inst_SRAI $end
   $var wire  1 [ inst_SRAIW $end
   $var wire  1 _ inst_SRAW $end
   $var wire  1 T inst_SRL $end
   $var wire  1 N inst_SRLI $end
   $var wire  1 Z inst_SRLIW $end
   $var wire  1 ^ inst_SRLW $end
   $var wire  1 S inst_XOR $end
   $var wire  1 J inst_XORI $end
   $var wire  4 ' io_aluOPCode [3:0] $end
   $var wire 32 & io_inst [31:0] $end
   $var wire  1 ) io_regInfos_0_need $end
   $var wire  5 ( io_regInfos_0_regIdx [4:0] $end
   $var wire  1 + io_regInfos_1_need $end
   $var wire  5 * io_regInfos_1_regIdx [4:0] $end
   $var wire  1 - io_regInfos_2_need $end
   $var wire  5 , io_regInfos_2_regIdx [4:0] $end
   $var wire  1 / io_regInfos_3_need $end
   $var wire  5 . io_regInfos_3_regIdx [4:0] $end
   $var wire  1 % reset $end
   $scope module alu_op_encoder $end
    $var wire  1 1 io_in_1 $end
    $var wire  1 : io_in_10 $end
    $var wire  1 ; io_in_11 $end
    $var wire  1 < io_in_12 $end
    $var wire  1 = io_in_13 $end
    $var wire  1 > io_in_14 $end
    $var wire  1 2 io_in_2 $end
    $var wire  1 3 io_in_3 $end
    $var wire  1 4 io_in_4 $end
    $var wire  1 5 io_in_5 $end
    $var wire  1 6 io_in_6 $end
    $var wire  1 7 io_in_7 $end
    $var wire  1 8 io_in_8 $end
    $var wire  1 9 io_in_9 $end
    $var wire  4 ? io_out [3:0] $end
   $upscope $end
   $scope module decoder_3_8 $end
    $var wire  1 ` bools_0 $end
    $var wire  1 a bools_1 $end
    $var wire  1 b bools_2 $end
    $var wire  1 c bools_3 $end
    $var wire  1 d bools_4 $end
    $var wire  1 e bools_5 $end
    $var wire  1 f bools_6 $end
    $var wire  1 g bools_7 $end
    $var wire  3 0 io_in [2:0] $end
    $var wire  8 # io_out [7:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000001 #
0$
1%
b00000000000000000000000000000000 &
b0000 '
b00000 (
1)
b00000 *
1+
b00000 ,
1-
b00000 .
1/
b000 0
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
b0000 ?
1@
0A
1B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
0]
0^
0_
1`
0a
0b
0c
0d
0e
0f
0g
#1
1$
#2
0$
#3
1$
#4
0$
#5
1$
#6
0$
#7
1$
#8
0$
#9
1$
#10
0$
0%
#11
1$
